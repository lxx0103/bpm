basePath: /
definitions:
  auth.API:
    properties:
      created:
        type: string
      created_by:
        type: string
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      route:
        type: string
      status:
        type: string
      updated:
        type: string
      updated_by:
        type: string
    type: object
  auth.APINew:
    properties:
      method:
        enum:
        - post
        - put
        - get
        type: string
      name:
        maxLength: 64
        minLength: 1
        type: string
      route:
        maxLength: 128
        minLength: 1
        type: string
      status:
        enum:
        - 1
        - 2
        type: integer
    required:
    - method
    - name
    - route
    - status
    type: object
  auth.Menu:
    properties:
      action:
        type: string
      component:
        type: string
      created:
        type: string
      created_by:
        type: string
      id:
        type: integer
      is_hidden:
        type: integer
      name:
        type: string
      parent_id:
        type: integer
      path:
        type: string
      status:
        type: integer
      title:
        type: string
      updated:
        type: string
      updated_by:
        type: string
    type: object
  auth.MenuAPINew:
    properties:
      ids:
        items:
          type: integer
        type: array
    required:
    - ids
    type: object
  auth.MenuNew:
    properties:
      action:
        maxLength: 64
        minLength: 1
        type: string
      component:
        maxLength: 255
        minLength: 1
        type: string
      is_hidden:
        enum:
        - 1
        - 2
        type: integer
      name:
        maxLength: 64
        minLength: 1
        type: string
      parent_id:
        minimum: -1
        type: integer
      path:
        maxLength: 128
        minLength: 1
        type: string
      status:
        enum:
        - 1
        - 2
        type: integer
      title:
        maxLength: 64
        minLength: 1
        type: string
    required:
    - is_hidden
    - name
    - parent_id
    - status
    - title
    type: object
  auth.Role:
    properties:
      created:
        type: string
      created_by:
        type: string
      id:
        type: integer
      name:
        type: string
      priority:
        type: integer
      status:
        type: integer
      updated:
        type: string
      updated_by:
        type: string
    type: object
  auth.RoleMenu:
    properties:
      ids:
        items:
          type: integer
        type: array
    required:
    - ids
    type: object
  auth.RoleNew:
    properties:
      name:
        maxLength: 64
        minLength: 1
        type: string
      priority:
        minimum: 1
        type: integer
      status:
        enum:
        - 1
        - 2
        type: integer
    required:
    - name
    - priority
    - status
    type: object
  auth.SigninRequest:
    properties:
      auth_type:
        enum:
        - 1
        - 2
        type: integer
      credential:
        minLength: 6
        type: string
      identifier:
        type: string
      organization_id:
        minimum: 1
        type: integer
    required:
    - auth_type
    - identifier
    type: object
  auth.SigninResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/auth.User'
    type: object
  auth.SignupRequest:
    properties:
      credential:
        minLength: 6
        type: string
      identifier:
        type: string
      organization_id:
        minimum: 1
        type: integer
    required:
    - credential
    - identifier
    - organization_id
    type: object
  auth.User:
    properties:
      address:
        type: string
      birthday:
        type: string
      created:
        type: string
      created_by:
        type: string
      credential:
        type: string
      email:
        type: string
      gender:
        type: string
      id:
        type: integer
      identifier:
        type: string
      name:
        type: string
      organization_id:
        type: integer
      phone:
        type: string
      position_id:
        type: integer
      role_id:
        type: integer
      status:
        type: integer
      type:
        type: integer
      updated:
        type: string
      updated_by:
        type: string
    type: object
  auth.UserUpdate:
    properties:
      address:
        minLength: 1
        type: string
      birthday:
        type: string
      email:
        type: string
      gender:
        minLength: 1
        type: string
      name:
        minLength: 2
        type: string
      phone:
        minLength: 1
        type: string
      position_id:
        minimum: 1
        type: integer
      role_id:
        minimum: 1
        type: integer
      status:
        minimum: 1
        type: integer
    type: object
  client.Client:
    properties:
      address:
        type: string
      created:
        type: string
      created_by:
        type: string
      id:
        type: integer
      name:
        type: string
      organization_id:
        type: integer
      phone:
        type: string
      status:
        type: integer
      updated:
        type: string
      updated_by:
        type: string
    type: object
  client.ClientNew:
    properties:
      address:
        maxLength: 255
        type: string
      name:
        maxLength: 64
        minLength: 1
        type: string
      phone:
        maxLength: 64
        minLength: 6
        type: string
      status:
        enum:
        - 1
        - 2
        type: integer
    required:
    - name
    - phone
    - status
    type: object
  component.Component:
    properties:
      component_type:
        type: string
      created:
        type: string
      created_by:
        type: string
      default_value:
        type: string
      event_id:
        type: integer
      id:
        type: integer
      json_data:
        type: string
      name:
        type: string
      patterns:
        type: string
      required:
        type: integer
      sort:
        type: integer
      status:
        type: integer
      updated:
        type: string
      updated_by:
        type: string
      value:
        type: string
    type: object
  element.Element:
    properties:
      created:
        type: string
      created_by:
        type: string
      default_value:
        type: string
      element_type:
        type: string
      id:
        type: integer
      json_data:
        type: string
      name:
        type: string
      node_id:
        type: integer
      patterns:
        type: string
      required:
        type: integer
      sort:
        type: integer
      status:
        type: integer
      updated:
        type: string
      updated_by:
        type: string
      value:
        type: string
    type: object
  element.ElementNew:
    properties:
      default_value:
        maxLength: 255
        type: string
      json_data:
        type: string
      name:
        maxLength: 64
        minLength: 1
        type: string
      node_id:
        minimum: 1
        type: integer
      patterns:
        maxLength: 255
        type: string
      required:
        enum:
        - 1
        - 2
        type: integer
      sort:
        minimum: 1
        type: integer
      type:
        maxLength: 32
        minLength: 1
        type: string
    required:
    - json_data
    - name
    - node_id
    - required
    - sort
    - type
    type: object
  element.ElementUpdate:
    properties:
      default_value:
        maxLength: 255
        type: string
      json_data:
        type: string
      name:
        maxLength: 64
        type: string
      patterns:
        maxLength: 255
        type: string
      required:
        enum:
        - 1
        - 2
        type: integer
      sort:
        minimum: 1
        type: integer
      type:
        maxLength: 32
        type: string
    required:
    - json_data
    type: object
  event.ComponentInfo:
    properties:
      id:
        minimum: 1
        type: integer
      value:
        type: string
    required:
    - id
    - value
    type: object
  event.Event:
    properties:
      assign:
        items:
          $ref: '#/definitions/event.EventAssign'
        type: array
      assign_type:
        type: integer
      assignable:
        type: integer
      created:
        type: string
      created_by:
        type: string
      id:
        type: integer
      name:
        type: string
      node_id:
        type: integer
      pre_id:
        items:
          $ref: '#/definitions/event.EventPre'
        type: array
      project_id:
        type: integer
      status:
        type: integer
      updated:
        type: string
      updated_by:
        type: string
    type: object
  event.EventAssign:
    properties:
      assign_to:
        type: integer
      assign_type:
        type: integer
      created:
        type: string
      created_by:
        type: string
      event_id:
        type: integer
      id:
        type: integer
      status:
        type: integer
      updated:
        type: string
      updated_by:
        type: string
    type: object
  event.EventPre:
    properties:
      created:
        type: string
      created_by:
        type: string
      event_id:
        type: integer
      id:
        type: integer
      pre_id:
        type: integer
      status:
        type: integer
      updated:
        type: string
      updated_by:
        type: string
    type: object
  event.EventUpdate:
    properties:
      assign_to:
        items:
          type: integer
        type: array
      assign_type:
        enum:
        - 1
        - 2
        type: integer
    type: object
  event.MyEvent:
    properties:
      id:
        type: integer
      name:
        type: string
      project_id:
        type: integer
      project_name:
        type: string
      status:
        type: integer
    type: object
  event.SaveEventInfo:
    properties:
      component_info:
        items:
          $ref: '#/definitions/event.ComponentInfo'
        type: array
    required:
    - component_info
    type: object
  member.MemberNew:
    properties:
      project_id:
        minimum: 1
        type: integer
      user_id:
        items:
          type: integer
        type: array
    required:
    - project_id
    - user_id
    type: object
  member.MemberResponse:
    properties:
      name:
        type: string
      user_id:
        type: integer
    type: object
  node.Node:
    properties:
      assign:
        items:
          $ref: '#/definitions/node.NodeAssign'
        type: array
      assign_type:
        type: integer
      assignable:
        type: integer
      created:
        type: string
      created_by:
        type: string
      id:
        type: integer
      json_data:
        type: string
      name:
        type: string
      pre_id:
        items:
          $ref: '#/definitions/node.NodePre'
        type: array
      status:
        type: integer
      template_id:
        type: integer
      updated:
        type: string
      updated_by:
        type: string
    type: object
  node.NodeAssign:
    properties:
      assign_to:
        type: integer
      assign_type:
        type: integer
      created:
        type: string
      created_by:
        type: string
      id:
        type: integer
      node_id:
        type: integer
      status:
        type: integer
      updated:
        type: string
      updated_by:
        type: string
    type: object
  node.NodeNew:
    properties:
      assign_to:
        items:
          type: integer
        type: array
      assign_type:
        enum:
        - 1
        - 2
        - 3
        type: integer
      assignable:
        enum:
        - 1
        - 2
        type: integer
      name:
        maxLength: 64
        minLength: 1
        type: string
      pre_id:
        items:
          type: integer
        type: array
      template_id:
        minimum: 1
        type: integer
    required:
    - assign_to
    - assign_type
    - assignable
    - name
    - pre_id
    - template_id
    type: object
  node.NodePre:
    properties:
      created:
        type: string
      created_by:
        type: string
      id:
        type: integer
      node_id:
        type: integer
      pre_id:
        type: integer
      status:
        type: integer
      updated:
        type: string
      updated_by:
        type: string
    type: object
  node.NodeUpdate:
    properties:
      assign_to:
        items:
          type: integer
        type: array
      assign_type:
        enum:
        - 1
        - 2
        - 3
        type: integer
      assignable:
        enum:
        - 1
        - 2
        type: integer
      json_data:
        type: string
      name:
        maxLength: 64
        minLength: 1
        type: string
      pre_id:
        items:
          type: integer
        type: array
    required:
    - json_data
    type: object
  organization.Organization:
    properties:
      created:
        type: string
      created_by:
        type: string
      id:
        type: integer
      name:
        type: string
      status:
        type: integer
      updated:
        type: string
      updated_by:
        type: string
    type: object
  organization.OrganizationNew:
    properties:
      name:
        maxLength: 64
        minLength: 1
        type: string
      status:
        enum:
        - 1
        - 2
        type: integer
    required:
    - name
    - status
    type: object
  position.Position:
    properties:
      created:
        type: string
      created_by:
        type: string
      id:
        type: integer
      name:
        type: string
      organization_id:
        type: integer
      status:
        type: integer
      updated:
        type: string
      updated_by:
        type: string
    type: object
  position.PositionNew:
    properties:
      name:
        maxLength: 64
        minLength: 1
        type: string
      status:
        enum:
        - 1
        - 2
        type: integer
    required:
    - name
    - status
    type: object
  project.Project:
    properties:
      client_id:
        type: integer
      created:
        type: string
      created_by:
        type: string
      id:
        type: integer
      name:
        type: string
      organization_id:
        type: integer
      status:
        type: integer
      template_id:
        type: integer
      updated:
        type: string
      updated_by:
        type: string
    type: object
  project.ProjectNew:
    properties:
      client_id:
        minimum: 1
        type: integer
      name:
        maxLength: 64
        minLength: 1
        type: string
      template_id:
        minimum: 1
        type: integer
    required:
    - name
    - template_id
    type: object
  project.ProjectUpdate:
    properties:
      client_id:
        minimum: 1
        type: integer
      name:
        maxLength: 64
        minLength: 1
        type: string
    type: object
  response.ErrorRes:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  response.ListRes:
    properties:
      count:
        type: integer
      data: {}
      page_id:
        type: integer
      page_size:
        type: integer
    type: object
  response.SuccessRes:
    properties:
      data: {}
    type: object
  template.Template:
    properties:
      created:
        type: string
      created_by:
        type: string
      event_json:
        type: string
      id:
        type: integer
      name:
        type: string
      organization_id:
        type: integer
      status:
        type: integer
      updated:
        type: string
      updated_by:
        type: string
    type: object
  template.TemplateNew:
    properties:
      event_json:
        type: string
      name:
        maxLength: 64
        minLength: 1
        type: string
      organization_id:
        minimum: 1
        type: integer
      status:
        enum:
        - 1
        - 2
        type: integer
    required:
    - event_json
    - name
    - organization_id
    - status
    type: object
  template.TemplateUpdate:
    properties:
      event_json:
        type: string
      name:
        maxLength: 64
        minLength: 1
        type: string
      status:
        enum:
        - 1
        - 2
        type: integer
    type: object
host: 0.0.0.0:8080
info:
  contact:
    email: lxx0103@yahoo.com
    name: Lewis
  description: API for BPM.
  title: BPM API
  version: "1.0"
paths:
  /apis:
    get:
      consumes:
      - application/json
      operationId: "36"
      parameters:
      - description: 页码
        in: query
        name: page_id
        required: true
        type: integer
      - description: 每页行数
        in: query
        name: page_size
        required: true
        type: integer
      - description: API名称
        in: query
        name: name
        type: string
      - description: API路由
        in: query
        name: route
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.ListRes'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/auth.API'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: API列表
      tags:
      - API管理
    post:
      consumes:
      - application/json
      operationId: "37"
      parameters:
      - description: API信息
        in: body
        name: api_info
        required: true
        schema:
          $ref: '#/definitions/auth.APINew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/auth.API'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 新建API
      tags:
      - API管理
  /apis/:id:
    get:
      consumes:
      - application/json
      operationId: "38"
      parameters:
      - description: API ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/auth.API'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID获取API
      tags:
      - API管理
    put:
      consumes:
      - application/json
      operationId: "39"
      parameters:
      - description: API ID
        in: path
        name: id
        required: true
        type: integer
      - description: API信息
        in: body
        name: api_info
        required: true
        schema:
          $ref: '#/definitions/auth.APINew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/auth.API'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID更新API
      tags:
      - API管理
  /clients:
    get:
      consumes:
      - application/json
      operationId: "24"
      parameters:
      - description: 页码
        in: query
        name: page_id
        required: true
        type: integer
      - description: 每页行数
        in: query
        name: page_size
        required: true
        type: integer
      - description: 客户名称
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.ListRes'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/client.Client'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 客户列表
      tags:
      - 客户管理
    post:
      consumes:
      - application/json
      operationId: "25"
      parameters:
      - description: 客户信息
        in: body
        name: client_info
        required: true
        schema:
          $ref: '#/definitions/client.ClientNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/client.Client'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 新建客户
      tags:
      - 客户管理
  /clients/:id:
    get:
      consumes:
      - application/json
      operationId: "26"
      parameters:
      - description: 客户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/client.Client'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID获取客户
      tags:
      - 客户管理
    put:
      consumes:
      - application/json
      operationId: "27"
      parameters:
      - description: 客户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 客户信息
        in: body
        name: client_info
        required: true
        schema:
          $ref: '#/definitions/client.ClientNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/client.Client'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID更新客户
      tags:
      - 客户管理
  /components:
    get:
      consumes:
      - application/json
      operationId: "13"
      parameters:
      - description: 页码
        in: query
        name: page_id
        required: true
        type: integer
      - description: 每页行数
        in: query
        name: page_size
        required: true
        type: integer
      - description: 事件ID
        in: query
        name: event_id
        required: true
        type: integer
      - description: 组件编码
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.ListRes'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/component.Component'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 组件列表
      tags:
      - 组件管理
  /components/:id:
    get:
      consumes:
      - application/json
      operationId: "15"
      parameters:
      - description: 组件ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/component.Component'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID获取组件
      tags:
      - 组件管理
  /elements:
    get:
      consumes:
      - application/json
      operationId: "64"
      parameters:
      - description: 页码
        in: query
        name: page_id
        required: true
        type: integer
      - description: 每页行数
        in: query
        name: page_size
        required: true
        type: integer
      - description: 节点ID
        in: query
        name: node_id
        required: true
        type: integer
      - description: 元素名称
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.ListRes'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/element.Element'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 元素列表
      tags:
      - 元素管理
    post:
      consumes:
      - application/json
      operationId: "65"
      parameters:
      - description: 元素信息
        in: body
        name: element_info
        required: true
        schema:
          $ref: '#/definitions/element.ElementNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/element.Element'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 新建元素
      tags:
      - 元素管理
  /elements/:id:
    delete:
      consumes:
      - application/json
      operationId: "68"
      parameters:
      - description: 元素ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID更新元素
      tags:
      - 元素管理
    get:
      consumes:
      - application/json
      operationId: "66"
      parameters:
      - description: 元素ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/element.Element'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID获取元素
      tags:
      - 元素管理
    put:
      consumes:
      - application/json
      operationId: "67"
      parameters:
      - description: 元素ID
        in: path
        name: id
        required: true
        type: integer
      - description: 元素信息
        in: body
        name: element_info
        required: true
        schema:
          $ref: '#/definitions/element.ElementUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/element.Element'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID更新元素
      tags:
      - 元素管理
  /events:
    get:
      consumes:
      - application/json
      operationId: "9"
      parameters:
      - description: 页码
        in: query
        name: page_id
        required: true
        type: integer
      - description: 每页行数
        in: query
        name: page_size
        required: true
        type: integer
      - description: 项目ID
        in: query
        name: project_id
        type: integer
      - description: 事件编码
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.ListRes'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/event.Event'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 事件列表
      tags:
      - 事件管理
  /events/:id:
    get:
      consumes:
      - application/json
      operationId: "11"
      parameters:
      - description: 事件ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/event.Event'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID获取事件
      tags:
      - 事件管理
    put:
      consumes:
      - application/json
      operationId: "12"
      parameters:
      - description: 事件ID
        in: path
        name: id
        required: true
        type: integer
      - description: 事件信息
        in: body
        name: event_info
        required: true
        schema:
          $ref: '#/definitions/event.EventUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/event.Event'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID更新事件
      tags:
      - 事件管理
  /members:
    get:
      consumes:
      - application/json
      operationId: "34"
      parameters:
      - description: 项目ID
        in: query
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/member.MemberResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 项目成员列表
      tags:
      - 项目管理
    post:
      consumes:
      - application/json
      operationId: "35"
      parameters:
      - description: 成员信息
        in: body
        name: member_info
        required: true
        schema:
          $ref: '#/definitions/member.MemberNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/member.MemberResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 新建项目成员
      tags:
      - 项目管理
  /menuapis/:id:
    get:
      consumes:
      - application/json
      operationId: "46"
      parameters:
      - description: 菜单ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  items:
                    type: integer
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据菜单ID获取API权限
      tags:
      - 权限管理
    post:
      consumes:
      - application/json
      operationId: "47"
      parameters:
      - description: 菜单ID
        in: path
        name: id
        required: true
        type: integer
      - description: 菜单信息
        in: body
        name: menu_info
        required: true
        schema:
          $ref: '#/definitions/auth.MenuAPINew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据菜单ID更新API权限
      tags:
      - 权限管理
  /menus:
    get:
      consumes:
      - application/json
      operationId: "40"
      parameters:
      - description: 页码
        in: query
        name: page_id
        required: true
        type: integer
      - description: 每页行数（5/10/15/20）
        in: query
        name: page_size
        required: true
        type: integer
      - description: 菜单名称
        in: query
        name: name
        type: string
      - description: 只显示顶级菜单
        in: query
        name: only_top
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.ListRes'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/auth.Menu'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 菜单列表
      tags:
      - 菜单管理
    post:
      consumes:
      - application/json
      operationId: "41"
      parameters:
      - description: 菜单信息
        in: body
        name: menu_info
        required: true
        schema:
          $ref: '#/definitions/auth.MenuNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/auth.Menu'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 新建菜单
      tags:
      - 菜单管理
  /menus/:id:
    delete:
      consumes:
      - application/json
      operationId: "50"
      parameters:
      - description: 菜单ID
        in: path
        name: id
        required: true
        type: integer
      - description: 菜单信息
        in: body
        name: menu_info
        required: true
        schema:
          $ref: '#/definitions/auth.MenuNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID更新菜单
      tags:
      - 菜单管理
    get:
      consumes:
      - application/json
      operationId: "42"
      parameters:
      - description: 菜单ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/auth.Menu'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID获取菜单
      tags:
      - 菜单管理
    put:
      consumes:
      - application/json
      operationId: "43"
      parameters:
      - description: 菜单ID
        in: path
        name: id
        required: true
        type: integer
      - description: 菜单信息
        in: body
        name: menu_info
        required: true
        schema:
          $ref: '#/definitions/auth.MenuNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/auth.Menu'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID更新菜单
      tags:
      - 菜单管理
  /mymenu:
    get:
      consumes:
      - application/json
      operationId: "48"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 获取当前用户的前端路由
      tags:
      - 权限管理
  /nodes:
    get:
      consumes:
      - application/json
      operationId: "59"
      parameters:
      - description: 页码
        in: query
        name: page_id
        required: true
        type: integer
      - description: 每页行数
        in: query
        name: page_size
        required: true
        type: integer
      - description: 节点名称
        in: query
        name: name
        type: string
      - description: 模板ID
        in: query
        name: template_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.ListRes'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/node.Node'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 节点列表
      tags:
      - 节点管理
    post:
      consumes:
      - application/json
      operationId: "60"
      parameters:
      - description: 节点信息
        in: body
        name: node_info
        required: true
        schema:
          $ref: '#/definitions/node.NodeNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/node.Node'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 新建节点
      tags:
      - 节点管理
  /nodes/:id:
    delete:
      consumes:
      - application/json
      operationId: "63"
      parameters:
      - description: 节点ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID删除节点
      tags:
      - 节点管理
    get:
      consumes:
      - application/json
      operationId: "61"
      parameters:
      - description: 节点ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/node.Node'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID获取节点
      tags:
      - 节点管理
    put:
      consumes:
      - application/json
      operationId: "62"
      parameters:
      - description: 节点ID
        in: path
        name: id
        required: true
        type: integer
      - description: 节点信息
        in: body
        name: node_info
        required: true
        schema:
          $ref: '#/definitions/node.NodeUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/node.Node'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID更新节点
      tags:
      - 节点管理
  /organizations:
    get:
      consumes:
      - application/json
      operationId: "1"
      parameters:
      - description: 页码
        in: query
        name: page_id
        required: true
        type: integer
      - description: 每页行数
        in: query
        name: page_size
        required: true
        type: integer
      - description: 组织编码
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.ListRes'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/organization.Organization'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 组织列表
      tags:
      - 组织管理
    post:
      consumes:
      - application/json
      operationId: "2"
      parameters:
      - description: 组织信息
        in: body
        name: organization_info
        required: true
        schema:
          $ref: '#/definitions/organization.OrganizationNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/organization.Organization'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 新建组织
      tags:
      - 组织管理
  /organizations/:id:
    get:
      consumes:
      - application/json
      operationId: "3"
      parameters:
      - description: 组织ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/organization.Organization'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID获取组织
      tags:
      - 组织管理
    put:
      consumes:
      - application/json
      operationId: "4"
      parameters:
      - description: 组织ID
        in: path
        name: id
        required: true
        type: integer
      - description: 组织信息
        in: body
        name: organization_info
        required: true
        schema:
          $ref: '#/definitions/organization.OrganizationNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/organization.Organization'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID更新组织
      tags:
      - 组织管理
  /positions:
    get:
      consumes:
      - application/json
      operationId: "28"
      parameters:
      - description: 页码
        in: query
        name: page_id
        required: true
        type: integer
      - description: 每页行数
        in: query
        name: page_size
        required: true
        type: integer
      - description: 职位编码
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.ListRes'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/position.Position'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 职位列表
      tags:
      - 职位管理
    post:
      consumes:
      - application/json
      operationId: "29"
      parameters:
      - description: 职位信息
        in: body
        name: position_info
        required: true
        schema:
          $ref: '#/definitions/position.PositionNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/position.Position'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 新建职位
      tags:
      - 职位管理
  /positions/:id:
    get:
      consumes:
      - application/json
      operationId: "30"
      parameters:
      - description: 职位ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/position.Position'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID获取职位
      tags:
      - 职位管理
    put:
      consumes:
      - application/json
      operationId: "31"
      parameters:
      - description: 职位ID
        in: path
        name: id
        required: true
        type: integer
      - description: 职位信息
        in: body
        name: position_info
        required: true
        schema:
          $ref: '#/definitions/position.PositionNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/position.Position'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID更新职位
      tags:
      - 职位管理
  /projects:
    get:
      consumes:
      - application/json
      operationId: "5"
      parameters:
      - description: 页码
        in: query
        name: page_id
        required: true
        type: integer
      - description: 每页行数
        in: query
        name: page_size
        required: true
        type: integer
      - description: 项目名称
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.ListRes'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/project.Project'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 项目列表
      tags:
      - 项目管理
    post:
      consumes:
      - application/json
      operationId: "6"
      parameters:
      - description: 项目信息
        in: body
        name: project_info
        required: true
        schema:
          $ref: '#/definitions/project.ProjectNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/project.Project'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 新建项目
      tags:
      - 项目管理
  /projects/:id:
    delete:
      consumes:
      - application/json
      operationId: "51"
      parameters:
      - description: 项目ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID删除项目
      tags:
      - 项目管理
    get:
      consumes:
      - application/json
      operationId: "7"
      parameters:
      - description: 项目ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/project.Project'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID获取项目
      tags:
      - 项目管理
    put:
      consumes:
      - application/json
      operationId: "8"
      parameters:
      - description: 项目ID
        in: path
        name: id
        required: true
        type: integer
      - description: 项目信息
        in: body
        name: project_info
        required: true
        schema:
          $ref: '#/definitions/project.ProjectUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/project.Project'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID更新项目
      tags:
      - 项目管理
  /rolemenus/:id:
    get:
      consumes:
      - application/json
      operationId: "44"
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  items:
                    type: integer
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据角色ID获取菜单权限
      tags:
      - 权限管理
    post:
      consumes:
      - application/json
      operationId: "45"
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      - description: 菜单信息
        in: body
        name: menu_info
        required: true
        schema:
          $ref: '#/definitions/auth.RoleMenu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据角色ID更新菜单权限
      tags:
      - 权限管理
  /roles:
    get:
      consumes:
      - application/json
      operationId: "18"
      parameters:
      - description: 页码
        in: query
        name: page_id
        required: true
        type: integer
      - description: 每页行数（5/10/15/20）
        in: query
        name: page_size
        required: true
        type: integer
      - description: 角色名称
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.ListRes'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/auth.Role'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 角色列表
      tags:
      - 角色管理
    post:
      consumes:
      - application/json
      operationId: "19"
      parameters:
      - description: 角色信息
        in: body
        name: role_info
        required: true
        schema:
          $ref: '#/definitions/auth.RoleNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/auth.Role'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 新建角色
      tags:
      - 角色管理
  /roles/:id:
    delete:
      consumes:
      - application/json
      operationId: "52"
      parameters:
      - description: 菜单ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID删除角色
      tags:
      - 菜单管理
    get:
      consumes:
      - application/json
      operationId: "20"
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/auth.Role'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID获取角色
      tags:
      - 角色管理
    put:
      consumes:
      - application/json
      operationId: "21"
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      - description: 角色信息
        in: body
        name: role_info
        required: true
        schema:
          $ref: '#/definitions/auth.RoleNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/auth.Role'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID更新角色
      tags:
      - 角色管理
  /signin:
    post:
      consumes:
      - application/json
      operationId: "17"
      parameters:
      - description: 登录类型
        in: body
        name: signin_info
        required: true
        schema:
          $ref: '#/definitions/auth.SigninRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/auth.SigninResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 登录
      tags:
      - 用户权限
  /signup:
    post:
      consumes:
      - application/json
      operationId: "22"
      parameters:
      - description: 登录类型
        in: body
        name: signup_info
        required: true
        schema:
          $ref: '#/definitions/auth.SignupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  type: integer
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 用户注册
      tags:
      - 用户权限
  /templates:
    get:
      consumes:
      - application/json
      operationId: "54"
      parameters:
      - description: 页码
        in: query
        name: page_id
        required: true
        type: integer
      - description: 每页行数
        in: query
        name: page_size
        required: true
        type: integer
      - description: 模板编码
        in: query
        name: name
        type: string
      - description: 模板编码
        in: query
        name: name
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.ListRes'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/template.Template'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 模板列表
      tags:
      - 模板管理
    post:
      consumes:
      - application/json
      operationId: "55"
      parameters:
      - description: 模板信息
        in: body
        name: template_info
        required: true
        schema:
          $ref: '#/definitions/template.TemplateNew'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/template.Template'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 新建模板
      tags:
      - 模板管理
  /templates/:id:
    delete:
      consumes:
      - application/json
      operationId: "58"
      parameters:
      - description: 模板ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID删除模板
      tags:
      - 模板管理
    get:
      consumes:
      - application/json
      operationId: "56"
      parameters:
      - description: 模板ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/template.Template'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID获取模板
      tags:
      - 模板管理
    put:
      consumes:
      - application/json
      operationId: "57"
      parameters:
      - description: 模板ID
        in: path
        name: id
        required: true
        type: integer
      - description: 模板信息
        in: body
        name: template_info
        required: true
        schema:
          $ref: '#/definitions/template.TemplateUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/template.Template'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID更新模板
      tags:
      - 模板管理
  /users:
    get:
      consumes:
      - application/json
      operationId: "32"
      parameters:
      - description: 页码
        in: query
        name: page_id
        required: true
        type: integer
      - description: 每页行数（5/10/15/20）
        in: query
        name: page_size
        required: true
        type: integer
      - description: 用户名称
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.ListRes'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/auth.Role'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 用户列表
      tags:
      - 用户管理
  /users/:id:
    get:
      consumes:
      - application/json
      operationId: "33"
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/auth.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID获取用户
      tags:
      - 用户管理
    put:
      consumes:
      - application/json
      operationId: "23"
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 用户信息
        in: body
        name: menu_info
        required: true
        schema:
          $ref: '#/definitions/auth.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/auth.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 根据ID更新用户
      tags:
      - 用户管理
  /wx/events:
    get:
      consumes:
      - application/json
      operationId: "53"
      parameters:
      - description: 显示所有all/激活active
        in: query
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/event.MyEvent'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 获取我的当前任务
      tags:
      - 小程序接口
  /wx/events/:id:
    put:
      consumes:
      - application/json
      operationId: "71"
      parameters:
      - description: 事件ID
        in: path
        name: id
        required: true
        type: integer
      - description: 组件内容
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/event.SaveEventInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 保存事件
      tags:
      - 小程序接口
  /wx/myevents:
    get:
      consumes:
      - application/json
      operationId: "70"
      parameters:
      - description: 显示所有all/激活active
        in: query
        name: status
        required: true
        type: string
      - description: 项目id
        in: query
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/event.MyEvent'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 获取我创建的任务
      tags:
      - 小程序接口
  /wx/myprojects:
    get:
      consumes:
      - application/json
      operationId: "69"
      parameters:
      - description: 显示所有all/激活active
        in: query
        name: status
        required: true
        type: string
      - description: 页码
        in: query
        name: page_id
        required: true
        type: integer
      - description: 每页行数
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.SuccessRes'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/project.Project'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorRes'
      summary: 获取我创建的项目
      tags:
      - 小程序接口
swagger: "2.0"
